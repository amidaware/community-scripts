[
  {
    "guid": "6820cb5e-5a7f-4d9b-8c22-d54677e3cc04",
    "filename": "Win_Firefox_Clear_Cache.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Firefox - Clean Cache",
    "description": "This script will clean up Mozilla Firefox for all users.",
    "shell": "powershell",
    "category": "TRMM (Win):Browsers",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "720edbb7-8faf-4a77-9283-29935e8880d0",
    "filename": "Win_Printer_ClearandRestart.bat",
    "submittedBy": "https://github.com/wh1te909",
    "name": "Printers - Clear all print jobs",
    "description": "This script will stop the spooler, delete all pending print jobs and restart the spooler",
    "shell": "cmd",
    "category": "TRMM (Win):Printing",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "eb15bb8b-a2c5-4452-b16a-8a758fbb6722",
    "filename": "Win_Printers_List_Installed.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Printers - Gets a list of all installed printers",
    "description": "This script will get a list of all installed printers, their ports and if shared or not",
    "shell": "powershell",
    "category": "TRMM (Win):Printing",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "3ff6a386-11d1-4f9d-8cca-1b0563bb6443",
    "filename": "Win_Google_Chrome_Clear_Cache.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Chrome - Clear Cache for All Users",
    "description": "This script will clean up Google Chrome for all users.",
    "shell": "powershell",
    "category": "TRMM (Win):Browsers",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "d3c74105-d1e5-40d8-94ff-b4d6b216fe0f",
    "filename": "Win_Chocolatey_List_Installed.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Chocolatey - List Installed apps",
    "description": "Lists apps locally installed by chocolatey",
    "shell": "cmd",
    "category": "TRMM (Win):3rd Party Software>Chocolatey",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "be1de837-f677-4ac5-aa0c-37a0fc9991fc",
    "filename": "Win_Install_Adobe_Reader.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Adobe Reader DC - Install",
    "description": "Installs Adobe Reader DC.",
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software>Chocolatey",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "7b1d90a1-3eda-48ab-9c49-20e714c9e82a",
    "filename": "Win_Duplicati_Install.bat",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Duplicati - Install 2.0.6.3 to work with Community Check Status",
    "description": "This script installs Duplicati 2.0.6.3 as a service and creates status files to be used with community check",
    "shell": "cmd",
    "category": "TRMM (Win):3rd Party Software",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "7c14beb4-d1c3-41aa-8e70-92a267d6e080",
    "filename": "Win_Duplicati_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Duplicati - Check Status",
    "description": "Checks Duplicati Backup is running properly over the last 24 hours",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software>Monitoring"
  },
  {
    "guid": "5a60c13b-1882-4a92-bdfb-6dd1f6a11dd14",
    "filename": "Win_Windows_Update_RevertToDefault.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Windows Update - Re-enable Microsoft managed Windows Update",
    "description": "TRMM agent will set registry key to disable Windows Auto Updates. This will re-enable Windows standard update settings",
    "shell": "powershell",
    "category": "TRMM (Win):Updates",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "81cc5bcb-01bf-4b0c-89b9-0ac0f3fe0c04",
    "filename": "Win_Windows_Update_Reset.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Windows Update - Reset",
    "description": "This script will reset all of the Windows Updates components to DEFAULT SETTINGS.",
    "shell": "powershell",
    "category": "TRMM (Win):Updates",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "8db87ff0-a9b4-4d9d-bc55-377bbcb85b6d",
    "filename": "Win_Start_Cleanup.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Disk - Cleanup C: drive",
    "description": "Cleans the C: drive's Window Temporary files, Windows SoftwareDistribution folder, the local users Temporary folder, IIS logs (if applicable) and empties the recycling bin. All deleted files will go into a log transcript in $env:TEMP. By default this script leaves files that are newer than 7 days old however this variable can be edited.",
    "shell": "powershell",
    "category": "TRMM (Win):Maintenance",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "25000"
  },
  {
    "guid": "2f28e8c1-ae0f-4b46-a826-f513974526a3",
    "filename": "Win_Defender_FullScan_Background.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Defender - Full Scan",
    "description": "Runs a Windows Defender Full background scan.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "adf81ddb-3b77-415c-a89b-2ccc826b5aa7",
    "filename": "Win_Defender_QuickScan_Background.ps1",
    "submittedBy": "https://github.com/Omnicef",
    "name": "Defender - Quick Scan",
    "description": "Runs a Quick Scan using Windows Defender in the Background.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "3c46290b-85db-4cd2-93a2-943c8c93b3b1",
    "filename": "all_network_speedtest.py",
    "submittedBy": "https://github.com/wh1te909",
    "name": "Network - Speed Test",
    "description": "Runs a Speed Test using Python",
    "shell": "python",
    "category": "TRMM (All):Network",
    "supported_platforms": [
      "windows",
      "linux",
      "darwin"
    ],
    "default_timeout": "120"
  },
  {
    "guid": "9d34f482-1f0c-4b2f-b65f-a9cf3c13ef5f",
    "filename": "Win_TRMM_Rename_Installed_App.ps1",
    "submittedBy": "https://github.com/bradhawkins85",
    "name": "TacticalRMM - Agent Rename",
    "description": "Updates the DisplayName registry entry for the Tactical RMM windows agent to your desired name. This script takes 1 required argument: the name you wish to set.",
    "syntax": "<string>",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "01845406-d83d-4ba5-960e-06bafe67a235",
    "filename": "Win_TRMM_GetLogs.ps1",
    "submittedBy": "https://github.com/RemiOS0456",
    "name": "TacticalRMM - Get Agent Logs for debugging",
    "description": "Pulls last 50 lines, unless more are requested from TRMM agent and Mesh Agent",
    "syntax": "[-Lines <Int>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "e2a21b69-b446-429c-ab56-328d4e8696fb",
    "filename": "Win_TRMM_Agent_Debugmode.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "TacticalRMM - TRMM Agent enable Debug Mode",
    "description": "Puts TRMM agent into debug mode temporarily. Restart PC to end debug session. Pull logs with Get Agent Logs script.",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "910e4ac3-5c6d-47a2-ab99-0d8bb2ddf166",
    "filename": "Win_TRMM_Agent_DebugmodeUndo.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "TacticalRMM - TRMM Agent disable Debug Mode",
    "description": "Reverts TRMM agent debug mode back to normal mode. Pull logs with Get Agent Logs script.",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "2af2e283-8397-41df-899d-474c581a36cb",
    "filename": "Win_TRMM_Mesh_Debug.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "TacticalRMM - Check Mesh Agent for problems",
    "description": "For debugging mesh, see if something is broken",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "b90fb6a1-cf53-48d4-9747-60dd333c7159",
    "filename": "Win_TRMM_Mesh_Install.ps1",
    "submittedBy": "https://github.com/NiceGuyIT",
    "name": "TacticalRMM - Install Mesh Agent if it's not installed",
    "description": "For deployments where Mesh Agent was not installed or failed to be installed. See script notes for requirements.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "syntax": "[-Reinstall]\n[-UseTemp]\nEnvironmental: TRMM_API_KEY=<string>",
    "category": "TRMM (Win):TacticalRMM Related"
  },
  {
    "guid": "525ae965-1dcf-4c17-92b3-5da3cf6819f5",
    "filename": "Win_Bitlocker_Drive_Check_Status.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Bitlocker - Check Drive for Status",
    "description": "Runs a check on drive for Bitlocker status. Returns 0 if Bitlocker is not enabled, 1 if Bitlocker is enabled",
    "syntax": "[Drive <string>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "2ea35fa2-c227-4d17-a40e-4d39f252e27a",
    "filename": "Win_Bitlocker_Create_Status_Report.ps1",
    "submittedBy": "https://github.com/ThatsNASt",
    "name": "Bitlocker - Create Status Report",
    "description": "Creates a Bitlocker status report.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "9e5769c1-3873-4941-bf70-e851e0afbd6d",
    "filename": "Win_Bitlocker_Retrieve_Status_Report.ps1",
    "submittedBy": "https://github.com/ThatsNASt",
    "name": "Bitlocker - Retrieve Status Report",
    "description": "Retrieves a Bitlocker status report.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "72b93487-0266-43f0-97cc-03d4c7ee0b44",
    "filename": "Win_Bitlocker_Get_Recovery_Keys.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Bitlocker - Get Recovery Keys",
    "description": "Retrieves a Bitlocker Recovery Keys",
    "shell": "powershell",
    "syntax": "[-KeyOnly]",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "11be7136-0416-47b4-a6dd-9776fa857dca",
    "filename": "Win_Storage_CheckPools.ps1",
    "submittedBy": "https://github.com/wh1te909",
    "name": "Storage Pools - Check Health",
    "description": "Checks all storage pools for health, returns error 1 if unhealthy",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Monitoring"
  },
  {
    "guid": "cfa14c28-4dfc-4d4e-95ee-a380652e058d",
    "filename": "Win_Bios_Check.ps1",
    "submittedBy": "https://github.com/ThatsNASt",
    "name": "BIOS - Check Information",
    "description": "Retrieves and reports on BIOS make, version, and date.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware"
  },
  {
    "guid": "e1c27982-b955-4766-85b6-d92527a177cf",
    "filename": "Win_Hardware_Monitor_Get_Info.ps1",
    "submittedBy": "https://github.com/MaxAnderson95/",
    "name": "Monitor - Get Info",
    "description": "Retrieves and reports on Monitor info: Manufacturer, Model, Serial",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware"
  },
  {
    "guid": "ae231ac4-b01f-4a39-a9d2-3d817af75260",
    "filename": "Win_Hardware_RAM_Status.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "RAM - Check Information",
    "description": "Retrieves and reports on RAM info: DIMM's, total memory, slots total and used",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware"
  },
  {
    "guid": "2cf918d1-1cc8-4208-bc94-9ca7b34e61c2",
    "filename": "Win_Lenovo_Driver_Updates.ps1",
    "submittedBy": "https://github.com/maltekiefer",
    "name": "Lenovo - Driver Updates",
    "description": "Searches the Lenovo support system for new drivers and installs them",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware",
    "default_timeout": "3600"
  },
  {
    "guid": "72c56717-28ed-4cc6-b30f-b362d30fb4b6",
    "filename": "Win_Hardware_SN.ps1",
    "submittedBy": "https://github.com/subzdev",
    "name": "Hardware - Get Serial Number",
    "description": "Returns BIOS Serial Number - Use with Custom Fields for later use",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "973c34d7-cab0-4fda-999c-b4933655f946",
    "filename": "Win_Screenconnect_GetGUID.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Screenconnect - Get GUID for client",
    "description": "Returns Screenconnect GUID for client - Use with Custom Fields for later use.",
    "args": [
      "{{client.ScreenConnectService}}"
    ],
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "bbe5645f-c8d8-4d86-bddd-c8dbea45c974",
    "filename": "Win_Splashtop_Get_ID.ps1",
    "submittedBy": "https://github.com/r3die",
    "name": "Splashtop - Get SUUID for client",
    "description": "Returns Splashtop SUUID for client - Use with Custom Fields for later use.",
    "args": [
      "{{agent.SplashtopSUUID}}"
    ],
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "9cfdfe8f-82bf-4081-a59f-576d694f4649",
    "filename": "Win_Teamviewer_Get_ID.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "TeamViewer - Get ClientID for client",
    "description": "Returns Teamviewer ClientID for client - Use with Custom Fields for later use.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "4f1f20e8-b3f6-495d-8436-c7368500b5f6",
    "filename": "Win_Supremo_GetID.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Supremo - Get ClientID for client",
    "description": "Returns Supremo ClientID for client - Use with Custom Fields for later use.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "e43081d4-6f71-4ce3-881a-22da749f7a57",
    "filename": "Win_AnyDesk_Get_Anynet_ID.ps1",
    "submittedBy": "https://github.com/meuchels",
    "name": "AnyDesk - Get AnyNetID for client",
    "description": "Returns AnyNetID for client - Use with Custom Fields for later use.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "672403e4-f9b5-4442-8d8c-4fb376dd0a62",
    "filename": "Win_Securepoint_Get_DeviceId.ps1",
    "submittedBy": "https://github.com/maltekiefer",
    "name": "Securepoint - Get DeviceId for client",
    "description": "Returns Securepoint DeviceId for client - Use with Custom Fields for later use.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Collectors"
  },
  {
    "guid": "95a2ee6f-b89b-4551-856e-3081b041caa7",
    "filename": "Win_Power_Profile_Reset_High_Performance_to_Defaults.ps1",
    "submittedBy": "https://github.com/azulskyknight",
    "name": "Power Profile - Reset High Perf Power Profile to defaults",
    "description": "Resets monitor, disk, standby, and hibernate timers in the default High Performance power profile to their default values. It also re-indexes the AC and DC power profiles into their default order.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Power"
  },
  {
    "guid": "2cbd30b0-84dd-4388-a36d-2e2e980f1a3e",
    "filename": "Win_Power_Profile_Set_High_Performance.ps1",
    "submittedBy": "https://github.com/azulskyknight",
    "name": "Power Profile - Set High Performance",
    "description": "Sets the High Performance Power profile to the active power profile. Use this to keep machines from falling asleep.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Power"
  },
  {
    "guid": "553236d3-81bc-49f4-af8a-0cff925a7f6d",
    "filename": "Win_10_Upgrade.ps1",
    "submittedBy": "https://github.com/RVL-Solutions and https://github.com/darimm",
    "name": "Windows 10 Upgrade",
    "description": "Forces an upgrade to the latest release of Windows 10.",
    "shell": "powershell",
    "category": "TRMM (Win):Updates",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "25000"
  },
  {
    "guid": "4d0ba685-2259-44be-9010-8ed2fa48bf74",
    "filename": "Win_Win11_Ready.ps1",
    "submittedBy": "https://github.com/adamjrberry/",
    "name": "Windows 11 Upgrade capable check",
    "description": "Checks to see if machine is Win11 capable",
    "shell": "powershell",
    "category": "TRMM (Win):Updates",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "3600"
  },
  {
    "guid": "67bee6b8-7bbb-40d9-8b3f-8b144d9710e8",
    "filename": "Win_Win11_Remove_Chat.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Windows 11 - Remove Chat Icon from taskbar",
    "description": "Removes the chat taskbar icon in Win11",
    "shell": "cmd",
    "category": "TRMM (Win):Win11 Tweaks",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "30"
  },
  {
    "guid": "24a6fdbc-0909-46fe-813c-7f26933fe5fe",
    "filename": "Win_Windows_Update_Block_Win11.ps1",
    "submittedBy": "https://github.com/dinger1986/",
    "name": "Windows 11 Upgrade Block",
    "description": "Blocks Windows 11 Upgrade if machine is Win11 capable",
    "shell": "powershell",
    "category": "TRMM (Win):Updates",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "3600"
  },
  {
    "guid": "375323e5-cac6-4f35-a304-bb7cef35902d",
    "filename": "Win_Disk_Volume_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Disk Drive Volume Health Check (using Event Viewer errors)",
    "description": "Checks Drive Volumes for errors reported in event viewer within the last 24 hours",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware"
  },
  {
    "guid": "4ace28ee-98f7-4931-9ac9-0adaf1a757ed",
    "filename": "Win_Software_Install_Report.ps1",
    "submittedBy": "https://github.com/silversword",
    "name": "Software Install - Reports new installs",
    "description": "This will check for software install events in the application Event Viewer log. If a number is provided as a command parameter it will search that number of days back.",
    "syntax": "[<int>]",
    "shell": "powershell",
    "category": "TRMM (Win):Monitoring",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "907652a5-9ec1-4759-9871-a7743f805ff2",
    "filename": "Win_Software_Uninstall.ps1",
    "submittedBy": "https://github.com/subzdev",
    "name": "Software Uninstaller - list, find, and uninstall most software",
    "description": "Allows listing, finding and uninstalling most software on Windows. There will be a best effort to uninstall silently if the silent uninstall string is not provided.",
    "syntax": "-list <string>\n[-u <uninstall string>]\n[-u quiet <uninstall string>]",
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "600"
  },
  {
    "guid": "64c3b1a8-c85f-4800-85a3-485f78a2d9ad",
    "filename": "Win_Bitdefender_GravityZone_Install.ps1",
    "submittedBy": "https://github.com/jhtechIL/",
    "name": "BitDefender Gravity Zone Install",
    "description": "Installs BitDefender Gravity Zone, requires client custom field setup. See script comments for details",
    "syntax": "[-log]",
    "args": [
      "-url {{client.bdurl}}",
      "-exe {{client.bdexe}}"
    ],
    "default_timeout": "2500",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "7de49f72-d654-460d-9f32-44325e947ac0",
    "filename": "Win_ESET_ProtectAgent_Install.ps1",
    "submittedBy": "https://github.com/clanto007/",
    "name": "ESET Protect Agent Install",
    "description": "Installs ESET Protect Agent, requires client custom field setup. See script comments for details",
    "syntax": "[-log]",
    "args": [
      "-eset_protect_host {{client.eset_protect_host}}",
      "-eset_protect_port {{client.eset_protect_port}}",
      "-eset_cert {{client.eset_cert}}",
      "-eset_cert_password {{client.eset_cert_password}}",
      "-eset_cert_auth {{client.eset_cert_auth}}",
      "-eset_static_group {{client.eset_static_group}}",
      "-eset_custom_policy {{client.eset_custom_policy}}"
    ],
    "default_timeout": "2500",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "bfd61545-839b-45da-8b3d-75ffc4d43272",
    "filename": "Win_Sophos_EndpointProtection_Install.ps1",
    "submittedBy": "https://github.com/bc24fl/",
    "name": "Sophos Endpoint Protection Install",
    "description": "Installs Sophos Endpoint Protection via the Sophos API.  Products include Antivirus, InterceptX, MDR, Device Encryption.  The script requires API credentials, Custom Fields, and Arguments passed to script.  See script comments for details",
    "args": [
      "-ClientId {{client.SophosClientId}}",
      "-ClientSecret {{client.SophosClientSecret}}",
      "-TenantName {{client.SophosTenantName}}",
      "-Products antivirus,intercept"
    ],
    "default_timeout": "3600",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "a9d2a6c0-8afa-4d69-8faf-f83b49c11702",
    "filename": "Win_Printer_Restart_Jobs.ps1",
    "submittedBy": "https://github.com/bc24fl/",
    "name": "Printers - Restarts stuck printer jobs.",
    "description": "Cycles through each printer and restarts any jobs that are stuck with error status.",
    "shell": "powershell",
    "category": "TRMM (Win):Printing",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "da51111c-aff6-4d87-9d76-0608e1f67fe5",
    "filename": "Win_Defender_Enable.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Defender - Enable",
    "description": "Enables Windows Defender and sets preferences",
    "shell": "powershell",
    "syntax": "[-NoControlledFolders][-AuditOnly]",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "5d476062-7a0d-4531-b291-3df4a3353081",
    "filename": "Win_Defender_Revert.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Defender - Revert back to Default Settings",
    "description": "Restores Windows Defender settings back to default",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "a223d03a-e22e-40e0-94f2-92dd8c481d14",
    "filename": "Win_Open_SSH_Server_Install.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "SSH - Install Feature and Enable",
    "description": "Installs and enabled OpenSSH Server Feature in Win10",
    "shell": "powershell",
    "category": "TRMM (Win):Windows Features",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "2435297a-6263-4e90-8688-1847400d0e22",
    "filename": "Win_RDP_enable.bat",
    "submittedBy": "https://github.com/dinger1986",
    "name": "RDP - Enable",
    "description": "Enables RDP",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Windows Features"
  },
  {
    "guid": "0afd8d00-b95b-4318-8d07-0b9bc4424287",
    "filename": "Win_Feature_NET35_Enable.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Windows Feature - Enable .NET 3.5",
    "description": "Enables the Windows .NET 3.5 Framework in Turn Features on and off",
    "shell": "powershell",
    "default_timeout": "300",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Windows Features"
  },
  {
    "guid": "24f19ead-fdfe-46b4-9dcb-4cd0e12a3940",
    "filename": "Win_Speedtest.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Speed Test - Powershell",
    "description": "Speed Test with Powershell(win 10 or server2016+)",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network"
  },
  {
    "guid": "5aabbecd-4f3b-47a4-9810-95d9992d2e3f",
    "filename": "Win_Network_Scan.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Network IP Scan",
    "description": "Checks for all devices on a network using ping and arp",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network"
  },
  {
    "guid": "caeeab69-71a4-4ef4-bf69-0641b6ff01df",
    "filename": "Win_Network_Speed_Test.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Test Network Speed",
    "description": "This will download and run iperf to check network speeds, you need one machine on the network as a server and another as a client",
    "syntax": "[-mode <string>]\n[-IP <string>]",
    "default_timeout": "600",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network"
  },
  {
    "guid": "a821975c-60df-4d58-8990-6cf8a55b4ee0",
    "filename": "Win_Time_Sync.bat",
    "submittedBy": "https://github.com/dinger1986",
    "name": "ADDC - Sync DC Time",
    "description": "Syncs time with domain controller",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Active Directory"
  },
  {
    "guid": "5320dfc8-022a-41e7-9e39-11c493545ec9",
    "filename": "Win_AD_Hudu_ADDS_Documentation.ps1",
    "submittedBy": "https://github.com/unplugged216",
    "name": "ADDS - Directory documentation in Hudu",
    "description": "Auto generates ADDS documentation and submits it to your Hudu instance.",
    "args": [
      "-ClientName {{client.name}}",
      "-HuduBaseDomain {{global.HuduBaseDomain}}",
      "-HuduApiKey {{global.HuduApiKey}}"
    ],
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Active Directory"
  },
  {
    "guid": "b6b9912f-4274-4162-99cc-9fd47fbcb292",
    "filename": "Win_ADDC_Sync_Start.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "ADDC - Sync AD",
    "description": "Trigger AD Sync on domain controller",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Active Directory"
  },
  {
    "guid": "b720e320-7755-4c89-9992-e1a6c43699ed",
    "filename": "Win_Defender_Clear_Logs.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Defender - Clear Logs",
    "description": "Clears Windows Defender Logs",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "d980fda3-a068-47eb-8495-1aab07a24e64",
    "filename": "Win_Defender_Status_Report.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Defender - Status Report",
    "description": "This will check for Malware and Antispyware within the last 24 hours and display, otherwise will report as Healthy. Command Parameter: (number) if provided will check that number of days back in the log.",
    "syntax": "[<int>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "9956e936-6fdb-4488-a9d8-8b274658037f",
    "filename": "Win_Disable_Fast_Startup.bat",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Power - Fast Startup Disable",
    "description": "Disables Faststartup on Windows 10",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Power"
  },
  {
    "guid": "f628a02b-16c3-4ab5-b788-dec5bc2af1d9",
    "filename": "Win_Power_Disable_Hibernation.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Power - Hibernate Disable",
    "description": "Disables Hibernation",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Power"
  },
  {
    "guid": "2472bbaf-1941-4722-8a58-d1dd0f528801",
    "filename": "Win_TRMM_AV_Update_Exclusion.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "TRMM Defender Exclusions",
    "description": "Windows Defender Exclusions for Tactical RMM",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "b253dc76-41a0-48ca-9cea-bee4277402c4",
    "filename": "Win_Display_Message_To_User.ps1",
    "submittedBy": "https://github.com/bradhawkins85",
    "name": "Message Popup To User",
    "syntax": "<string>",
    "description": "Displays a popup notification message to the currently logged on user using BurntToast",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Other"
  },
  {
    "guid": "19224d21-bd39-44bc-b9cf-8f1ba3ca9c11",
    "filename": "Win_Antivirus_Verify.ps1",
    "submittedBy": "https://github.com/beejayzed",
    "name": "Antivirus - Verify Status",
    "syntax": "[-antivirusName <string>] [-customfield]",
    "description": "Verify and display status for all installed Antiviruses",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security>Antivirus"
  },
  {
    "guid": "f88c5c52-c6fe-44db-b727-b7912a4279ed",
    "filename": "Win_Create_All_User_Logon_Script.ps1",
    "submittedBy": "https://github.com/nr-plaxon",
    "name": "Template Example - Create User Logon Script",
    "description": "Creates a powershell script that runs at logon of any user on the machine in the security context of the user.",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Other"
  },
  {
    "guid": "6c78eb04-57ae-43b0-98ed-cbd3ef9e2f80",
    "filename": "Win_Chocolatey_Manage_Apps_Bulk.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Chocolatey - Install, Uninstall, List and Upgrade Software",
    "description": "This script installs, uninstalls and updates software using Chocolatey with logic to slow tasks to minimize hitting community limits. Mode install/uninstall/upgrade/upgrade-only-installed Hosts x",
    "syntax": "-PackageName <string>\n[-Hosts <string>]\n[-mode {(install) | upgrade | upgrade-only-installed | uninstall | list}]",
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software>Chocolatey",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "600"
  },
  {
    "guid": "b2362f48-cedd-4f5b-8848-68fe58131c98",
    "filename": "Win_WinGet_Manage_Apps.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Winget - Install, Uninstall and Upgrade Software",
    "description": "This script installs, uninstalls and updates software using winget. Mode install/uninstall/upgrade/search",
    "syntax": "-PackageName <string>]\n[-mode {install | search | upgrade | uninstall }]",
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software>WinGet",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "600"
  },
  {
    "guid": "fff8024d-d72e-4457-84fa-6c780f69a16f",
    "filename": "Win_AD_Check_And_Enable_AD_Recycle_Bin.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "ADDC - Check and Enable AD Recycle Bin",
    "description": "Only run on Domain Controllers, checks for Active Directory Recycle Bin and enables if not already enabled",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Active Directory"
  },
  {
    "guid": "3afd07c0-04fd-4b23-b5f2-88205c0744d4",
    "filename": "Win_User_Admins_Local_Disable.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Local Administrators - Disables all local admins if joined to domain or AzureAD",
    "description": "Checks to see if computer is either joined to a AD domain or Azure AD. If it is, it disables all local admin accounts. If not joined to domain/AzureAD, leaves admin accounts in place",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):User Management"
  },
  {
    "guid": "ad918098-510f-41a1-98a9-3e10a6443324",
    "filename": "Win_User_Admin_LAPS.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "For Setting up and running a LAPS (Local Administrator Password Solution) for non-AD",
    "description": "This will create a local administrator, with each run it will change that localadmin user's password. This will let you make users non-administrators, but still have a local admin account.",
    "syntax": "[-LAPSID <string>]\n[-PassLength <Int>]\n[HideUser]\n[ShowUser]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):User Management"
  },
  {
    "guid": "71090fc4-faa6-460b-adb0-95d7863544e1",
    "filename": "Win_Bluescreen_Report.ps1",
    "submittedBy": "https://github.com/bbrendon",
    "name": "Event Viewer - Bluescreen Notification",
    "description": "Event Viewer Monitor - Notify on BSOD events on your system",
    "syntax": "[<int>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Monitoring"
  },
  {
    "guid": "8373846f-facc-49b9-9891-3a780a394c89",
    "filename": "Win_User_Local_Created_Monitor.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Event Viewer - New User Notification",
    "description": "Event Viewer Monitor - Notify when new Local user is created. If parameter provided will search back that number of days",
    "syntax": "[<int>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Monitoring"
  },
  {
    "guid": "65e5cef1-8338-4180-a0bc-cd54e62de690",
    "filename": "Win_Task_Scheduler_New_Items_Monitor.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Event Viewer - Task Scheduler New Item Notification",
    "description": "Event Viewer Monitor - Notify when new Task Scheduler item is created",
    "syntax": "[<int>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Monitoring"
  },
  {
    "guid": "08ca81f2-f044-4dfc-ad47-090b19b19d76",
    "filename": "Win_User_Logged_in_with_Temp_Profile.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "User Check - See if user logged in with temp profile",
    "description": "Check if users are logged in with a temp profile",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Other"
  },
  {
    "guid": "5d905886-9eb1-4129-8b81-a013f842eb24",
    "filename": "Win_Computer_Rename.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Rename Computer",
    "description": "Rename computer. First parameter will be new PC name. 2nd parameter if yes will auto-reboot machine",
    "syntax": "-NewName <string>\n[-Username <string>]\n[-Password <string>]\n[-Restart]",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": 30
  },
  {
    "guid": "5bc815a0-d349-416f-8c3d-ac499d4da2e8",
    "filename": "Win_Reboot.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Reboot/Restart Computer",
    "description": "Reboots/Restarts the computer with an optional wait time before restarting.",
    "syntax": "[-wait <Int>]",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": 86400
  },
  {
    "guid": "f396dae2-c768-45c5-bd6c-176e56ed3614",
    "filename": "Win_Power_RestartorShutdown.ps1",
    "submittedBy": "https://github.com/tremor021",
    "name": "Power - Restart or Shutdown PC",
    "description": "Restart PC. Add parameter: shutdown if you want to shutdown computer",
    "syntax": "[shutdown]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Updates"
  },
  {
    "guid": "93038ae0-58ce-433e-a3b9-bc99ad1ea79a",
    "filename": "Win_Services_AutomaticStartup_Running.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Ensure all services with startup type Automatic are running",
    "description": "Gets a list of all service with startup type of Automatic but aren't running and tries to start them",
    "shell": "powershell",
    "default_timeout": "300",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Updates"
  },
  {
    "guid": "e09895d5-ca13-44a2-a38c-6e77c740f0e8",
    "filename": "Win_ScreenConnectAIO.ps1",
    "submittedBy": "https://github.com/bradhawkins85",
    "name": "ScreenConnect AIO",
    "description": "Install, Uninstall, Start and Stop ScreenConnect Access Agent",
    "args": [
      "-serviceName {{client.ScreenConnectService}}",
      "-url {{client.ScreenConnectInstaller}}",
      "-clientname {{client.name}}",
      "-sitename {{site.name}}"
    ],
    "default_timeout": "120",
    "shell": "powershell",
    "syntax": "-serviceName <string>\n-url <string>\n-clientname <string>\n-sitename <string>\n-action {(install) | uninstall | start | stop}",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "3abbb62a-3757-492c-8979-b4fc6174845d",
    "filename": "Win_AutoRun_Disable.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Autorun - Disable",
    "description": "Disable Autorun System Wide",
    "shell": "cmd",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "30"
  },
  {
    "guid": "4a11877a-7555-494c-ac74-29d6df3c1989",
    "filename": "Win_Cortana_Disable.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Cortana - Disable",
    "description": "Disable Cortana System Wide",
    "shell": "cmd",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "30"
  },
  {
    "guid": "3735f41c-d6cd-452f-8293-62396815749d",
    "filename": "Win_Windows_Hello_Toggle.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Windows Hello Toggle",
    "description": "Disable or Enable Windows Hello System Wide",
    "syntax": "[-Mode {(disable) | enable}]",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "30"
  },
  {
    "guid": "28ef1387-dd4f-4bab-b042-26250914e370",
    "filename": "Win_WOL_Enable_Status.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "BROKEN Network WoL - Enable function",
    "description": "Wake on Lan enable on Dell, HP, Lenovo",
    "shell": "powershell",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "685d5432-0b84-46d5-98e8-3ec2054150fe",
    "filename": "Win_WOL_Test_State.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "BROKEN Network WoL - Test State",
    "description": "Wake on Lan test status",
    "shell": "powershell",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "7c0c7e37-60ff-462f-9c34-b5cd4c4796a7",
    "filename": "Win_Wifi_SSID_and_Password_Retrieval.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network Wireless - Retrieve Saved WiFi passwords",
    "description": "Returns all saved wifi passwords stored on the computer",
    "shell": "powershell",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "abe78170-7cf9-435b-9666-c5ef6c11a106",
    "filename": "Win_Network_IPv6_Disable.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network IPv6 - Disable",
    "description": "Disable IPv6 on all adapters",
    "shell": "powershell",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "745bb7cd-b71a-4f2e-b6f2-c579b1828162",
    "filename": "Win_Network_DHCP_Set.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network - Set Primary NIC to DHCP",
    "description": "Enable DHCP on primary adapter",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network",
    "default_timeout": "90"
  },
  {
    "guid": "5676acca-44e5-46c8-af61-ae795ecb3ef1",
    "filename": "Win_Network_IP_DHCP_Renew.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network - Release and Renew IP",
    "description": "Trigger and release and renew of IP address on all network adapters",
    "shell": "cmd",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "83aa4d51-63ce-41e7-829f-3c16e6115bbf",
    "filename": "Win_Network_DNS_Set_to_1.1.1.2.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network - Set all NICs to use DNS of 1.1.1.2",
    "description": "Domain computers skipped. Sets all NICs to have primary DNS server of 1.1.1.2, backup of 1.0.0.2 (Cloudflare malware blocking)",
    "shell": "powershell",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "0caa33bc-89ca-47e0-ad4a-04626ae6384d",
    "filename": "Win_Network_TCP_Reset_Stack.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "Network - Reset tcp using netsh",
    "description": "Resets TCP stack using netsh",
    "shell": "cmd",
    "category": "TRMM (Win):Network",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "120"
  },
  {
    "guid": "6ce5682a-49db-4c0b-9417-609cf905ac43",
    "filename": "Win_Win10_Change_Key_and_Activate.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Product Key in Win10 - Change and Activate",
    "description": "Insert new product key and Activate. Requires 1 parameter the product key you want to use",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "43e65e5f-717a-4b6d-a724-1a86229fcd42",
    "filename": "Win_Activation_Check.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Windows Activation check",
    "description": "Checks to see if windows is activated and returns status",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "120"
  },
  {
    "guid": "83f6c6ea-6120-4fd3-bec8-d3abc505dcdf",
    "filename": "Win_TRMM_Start_Menu_Delete_Shortcut.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "TacticalRMM - Delete Start Menu Shortcut for App",
    "description": "Delete its application shortcut that's installed in the start menu by default",
    "shell": "powershell",
    "category": "TRMM (Win):TacticalRMM Related",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "10"
  },
  {
    "guid": "60130fca-7636-446e-acd7-cc5d29d609c2",
    "filename": "Win_Firewall_Check_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Windows Firewall - Check Status",
    "description": "Windows Firewall - Check state, report status",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network"
  },
  {
    "guid": "93379675-c01c-433f-87df-a11597c959f0",
    "filename": "Win_UAC_Check_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Windows UAC - Check Status",
    "description": "Windows UAC - Report status",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Security"
  },
  {
    "guid": "7ea6a11a-05c0-4151-b5c1-cb8af029299f",
    "filename": "Win_AzureAD_Check_Connection_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Azure AD - Check Status",
    "description": "Azure AD - Check if joined or not",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Azure>AD"
  },
  {
    "guid": "7d81859a-1ba3-42b0-8664-29844f0dd765",
    "filename": "Win_Azure_Mars_Cloud_Backup_Status.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Azure - Mars Cloud backup Status",
    "description": "Azure - Mars Cloud backup Check Status",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Azure>Backup"
  },
  {
    "guid": "e18c64d0-b783-4b52-b44b-9bb7592b439b",
    "filename": "Win_FileSystem_Enable_Long_Paths.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "File System - Enable Long Paths",
    "description": "Enables NTFS Long paths greater than 260 characters",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "c6252ca8-5172-42ea-9114-e447f80868f5",
    "filename": "Win_USB_Disable_Access.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "USB - Disable Access",
    "description": "USB - Disable Plugged in USB devices",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "3785952f-69fb-4bda-b2fe-5e3e8642738a",
    "filename": "Win_USB_Enable_Access.bat",
    "submittedBy": "https://github.com/silversword411",
    "name": "USB - Enable Access",
    "description": "USB - Enable Plugged in USB devices",
    "shell": "cmd",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "c6014da2-b188-4e1b-b96a-e3440ade3a6a",
    "filename": "Win_RecycleBin_Empty.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "File System - Empty Recycle Bin",
    "description": "Empty the recycle bin",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Storage"
  },
  {
    "guid": "6a52f495-d43e-40f4-91a9-bbe4f578e6d1",
    "filename": "Win_User_Create.ps1",
    "submittedBy": "https://github.com/brodur",
    "name": "User - Create Local",
    "description": "Create a local user. Parameters are: username, password and optional: description, fullname, group (adds to Users if not specified)",
    "syntax": "-username <string>\n-password <string>\n[-description <string>]\n[-fullname <string>]\n[-group <string>]",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):User Management"
  },
  {
    "guid": "6e27d5341-88fa-4c2f-9c91-c3aeb1740e85",
    "filename": "Win_User_EnableDisable.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "User - Enable or disable a user",
    "description": "Used to enable or disable local user",
    "syntax": "-Name <string>\n-Enabled { yes | no }",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):User Management"
  },
  {
    "guid": "57997ec7-b293-4fd5-9f90-a25426d0eb90",
    "filename": "Win_Users_List.ps1",
    "submittedBy": "https://github.com/tremor021",
    "name": "Users - List Local Users and Enabled/Disabled Status",
    "description": "Get list of computer users and show which one is enabled",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):User Management"
  },
  {
    "guid": "77da9c87-5a7a-4ba1-bdde-3eeb3b01d62d",
    "filename": "Win_Network_Set_To_Private.ps1",
    "submittedBy": "https://github.com/tremor021",
    "name": "Network Category - Set Network To Private",
    "description": "Sets current network type to Private",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Network"
  },
  {
    "guid": "768f42d5-7b45-45ed-8233-254ae537aaa2",
    "filename": "Win_TaskScheduler_Add_Task.ps1",
    "submittedBy": "https://github.com/tremor021",
    "name": "Task Scheduler - Add a task",
    "description": "Add a task to Task Scheduler, needs editing",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Other"
  },
  {
    "guid": "e371f1c6-0dd9-44de-824c-a17e1ca4c4ab",
    "filename": "Win_Outlook_SentItems_To_Delegated_Folders.ps1",
    "submittedBy": "https://github.com/dinger1986",
    "name": "Outlook - Delegated folders set for all profiles",
    "description": "Uses RunAsUser to setup sent items for the currently logged on user on delegated folders to go into the delegated folders sent for all.",
    "shell": "powershell",
    "category": "TRMM (Win):Office",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "17040742-184a-4251-8f7b-4a1b0a1f02d1",
    "filename": "Win_File_Copy_Misc.ps1",
    "submittedBy": "https://github.com/tremor021",
    "name": "EXAMPLE File Copying using powershell",
    "description": "Reference Script: Will need manual tweaking, for copying files/folders from paths/websites to local",
    "syntax": "-source <string>\n-destination <string>\n[-recursive {True | False}]",
    "shell": "powershell",
    "category": "TRMM (Win):Misc>Reference",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "168037d8-78e6-4a6a-a9a9-8ec2c1dbe949",
    "filename": "Win_MSI_Install.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "EXAMPLE Function for running MSI install via powershell",
    "description": "Reference Script: Will need manual tweaking, for running MSI from powershell",
    "shell": "powershell",
    "category": "TRMM (Win):Misc>Reference",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "600"
  },
  {
    "guid": "8076124b-1be2-4d4d-a432-f41a260f1153",
    "filename": "Win_RunAsUser_Example.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "EXAMPLE RunAsUser Template",
    "description": "Reference Script: Will need manual tweaking, for executing scripts in User context",
    "shell": "powershell",
    "category": "TRMM (Win):Misc>Reference",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "49f63733-090b-486b-8ce5-c9bea4917d07",
    "filename": "Win_RunAsUser_Example2.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "EXAMPLE RunAsUser Template2",
    "description": "Reference Script: Will need manual tweaking, for getting logged in username for RunAsUser scripts",
    "shell": "powershell",
    "category": "TRMM (Win):Misc>Reference",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "90"
  },
  {
    "guid": "453c6d22-84b7-4767-8b5f-b825f233cf55",
    "filename": "Win_AD_Join_Computer.ps1",
    "submittedBy": "https://github.com/rfost52",
    "name": "AD - Join Computer to Domain",
    "syntax": "-domain <string>\n-password <string>\n-UserAccount ADMINaccount\n[-OUPath <OU=testOU,DC=test,DC=local>]",
    "description": "Join computer to a domain in Active Directory",
    "shell": "powershell",
    "category": "TRMM (Win):Active Directory",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "73ab2fba-c01b-4ebc-9e00-311b7ced4a51",
    "filename": "Win_Powershell_TestPATH.bat",
    "submittedBy": "https://github.com/NiceGuyIT",
    "name": "Windows PATH Testing",
    "description": "Testing Windows PATH environment variables for troubleshooting",
    "shell": "cmd",
    "category": "TRMM (Win):Testing",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "962d3cce-49a2-4f3e-a790-36f62a6799a0",
    "filename": "Win_Collect_System_Report_And_Email.ps1",
    "submittedBy": "https://github.com/rfost52",
    "name": "Collect System Report and Email",
    "syntax": "-agentname <string>\n-file <string enter file name with the extension .HTM or .HTML>\n-fromaddress <string>\n-toaddress <string>\n-smtpserver <string>\n-password <string>\n-port <int 587 is the standard port for sending mail over TLS>",
    "description": "Generates a system report in HTML format, then emails it",
    "shell": "powershell",
    "category": "TRMM (Win):Other",
    "supported_platforms": [
      "windows"
    ],
    "default_timeout": "300"
  },
  {
    "guid": "f0487715-8295-42d9-83e3-9977b7fd16f4",
    "filename": "Win_HuduToTactical_Sync.ps1",
    "submittedBy": "https://github.com/bc24fl/tacticalrmm-scripts/",
    "name": "Hudu - Sync between Hudu and TRMM",
    "description": "Syncs assets from Tactical to Hudu",
    "args": [
      "-ApiKeyTactical {{global.ApiKeyTactical}}",
      "-ApiUrlTactical {{global.ApiUrlTactical}}",
      "-ApiKeyHudu {{global.ApiKeyHudu}}",
      "-ApiUrlHudu{{global.ApiUrlHudu}}"
    ],
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "9eda0e93-b4f8-4fb3-8a5d-2636f67b7663",
    "filename": "Win_Kb_Approve_Install.ps1",
    "submittedBy": "https://github.com/bc24fl/tacticalrmm-scripts/",
    "name": "Windows Updates - Individual KB Approve and Install",
    "description": "Toggle approval and installation of a specific Kb across all agents",
    "args": [
      "-ApiKeyTactical {{global.ApiKeyTactical}}",
      "-ApiUrlTactical {{global.ApiUrlTactical}}",
      "-Kb [Microsoft Kb #]"
    ],
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Updates"
  },
  {
    "guid": "ace9aecf-a466-4589-865c-54817436f194",
    "filename": "Win_Teamviewer_Host_custom_install.ps1",
    "submittedBy": "https://github.com/clanto007/",
    "name": "TeamViewer - Install Host with Custom ID, API and EasyAccess (corporate license)",
    "description": "Installs TeamViewer Host with Custom ID and API. The script requires API credentials, Custom ID, TeamViewer Corporate, Custom Fields, and Arguments passed to script.  See script comments for details",
    "args": [
      "-urlmsitw {{client.LinkMSITW}}",
      "-customidtw {{client.CUSTOMIDTW}}",
      "-apitw {{client.TeamViewerAPI}}"
    ],
    "default_timeout": "600",
    "supported_platforms": [
      "windows"
    ],
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "d81d56d8-211d-4910-9c2b-be465541c0fc",
    "filename": "Win_Memory_ProcessCheck.ps1",
    "submittedBy": "https://github.com/silversword411",
    "name": "Monitor processes memory usage and warn when exceeds certain level",
    "description": "Used to check the memory usage of a specific application and alert if exceeds certain amount. Good for monitoring for memory leaks etc",
    "syntax": "-procname <string>\n-warnwhenovermemsize <Int>",
    "default_timeout": "60",
    "supported_platforms": [
      "windows"
    ],
    "shell": "powershell",
    "category": "TRMM (Win):Other"
  },
  {
    "guid": "1967a7c8-c25b-4b98-b6e5-f5220ff1d6f5",
    "filename": "Linux_memory_check.sh",
    "submittedBy": "https://github.com/BelleNottelling",
    "name": "Memory Usage Check",
    "description": "Used to check the current physical memory available on a linux machine and error out if it's too low. (Default threshold is 20%, can be changed by passing a new value to the check)",
    "args": [
      "min=20"
    ],
    "default_timeout": "60",
    "supported_platforms": [
      "linux"
    ],
    "shell": "shell",
    "category": "TRMM (Linux):Checks"
  },
  {
    "guid": "8d5faedc-17cc-4a40-afc5-1dccc5097842",
    "filename": "Linux_CPU_check.sh",
    "submittedBy": "https://github.com/BelleNottelling",
    "name": "CPU Usage Check",
    "description": "Used to check the CPU usage on a linux machine and error out if it's too high. (Default threshold is 80%, can be changed by passing a new value to the check)",
    "args": [
      "max=80"
    ],
    "default_timeout": "60",
    "supported_platforms": [
      "linux"
    ],
    "shell": "shell",
    "category": "TRMM (Linux):Checks"
  },
  {
    "guid": "a8ddc705-c285-429e-a44c-b4ea6b889df5",
    "filename": "Win_IIS_Check_SSL_Certs.ps1",
    "submittedBy": "https://github.com/ebdavison",
    "name": "Check IIS Certs for Expiry",
    "description": "Checks the IIS sites for https bindings and then checks the associated SSL certificate to see if it is expiring in 'NumDays'.  'NumDays' is set to 60 days as the default.",
    "args": [
      "-NumDays 60"
    ],
    "default_timeout": "60",
    "supported_platforms": [
      "windows"
    ],
    "shell": "powershell",
    "category": "TRMM (Win):Monitoring"
  },
  {
    "guid": "79108c30-8010-4303-81c0-6b56623a3b35",
    "filename": "Win_ESET_ThreatScan.ps1",
    "submittedBy": "https://github.com/lcsnetworks",
    "name": "ESET - Threat Scan",
    "description": "Runs a Smart Scan on the target system using ESET Endpoint Antivirus. Can be adjusted to different drives / paths + scan profiles via script Arguments.",
    "syntax": "[-target <comma-separated string>]\n[-profile <string>]",
    "args": [
      "-target C:\\",
      "-profile \"@Smart scan\""
    ],
    "default_timeout": "7200",
    "supported_platforms": [
      "windows"
    ],
    "shell": "powershell",
    "category": "TRMM (Win):3rd Party Software"
  },
  {
    "guid": "2953cafc-3bae-4717-88da-ddeb4b14eb9b",
    "filename": "Win_Disk_Check_Repair.ps1",
    "submittedBy": "https://github.com/lcsnetworks",
    "name": "Disk - Check / Repair",
    "description": "Check and optionally repair disk volume on the target system/drive",
    "syntax": "[-driveletter <string>]\n[-spotfix]\n[-offline]",
    "args": [
      "-driveletter C"
    ],
    "default_timeout": "3600",
    "shell": "powershell",
    "supported_platforms": [
      "windows"
    ],
    "category": "TRMM (Win):Hardware"
  },
  {
    "guid": "52f6873c-ea02-4126-89c9-f6c1471cdf6d",
    "filename": "all_network_online_check.py",
    "submittedBy": "https://github.com/NiceGuyIT",
    "name": "Network - Online check",
    "description": "Check to be alerted when a PC comes online. Returns failure if the PC is online.",
    "syntax": "[PING_HOSTNAME=<string>]\n[PING_TIMEOUT=<number>]\n[PING_STACKTRACE=<boolean>]",
    "args": [],
    "default_timeout": "10",
    "shell": "python",
    "supported_platforms": [
      "windows",
      "linux",
      "darwin"
    ],
    "category": "TRMM (All):Network"
  },
  {
    "guid": "8a08cee9-bdc8-4d7a-8389-a201bb8ac7f1",
    "filename": "all_python_module_manager.py",
    "submittedBy": "https://github.com/NiceGuyIT",
    "name": "Python - Module Manager",
    "description": "List/Check/Install/Remove/Update modules in the Python distribution",
    "syntax": "help\ninfo [--verbose|--no-verbose]\nlist [--format=<string>]\ncheck <string>...\ninstall <string>...\nuninstall <string>...\nupgrade <string>...",
    "args": [],
    "default_timeout": "60",
    "shell": "python",
    "supported_platforms": [
      "windows",
      "linux",
      "darwin"
    ],
    "category": "TRMM (All):3rd Party Software"
  }
]